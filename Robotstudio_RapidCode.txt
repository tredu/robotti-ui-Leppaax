MODULE MainModule
    PERS bool AutomaticMode := FALSE;
    PERS bool AutomaticModeOn := FALSE;
    PERS bool AutomaticModeOff := FALSE;
    PERS bool BeltForward := FALSE;
    PERS bool BeltBackward := FALSE;
    PERS bool CylinderOut := FALSE;
    
PROC SETAutomaticMode()
	IF AutomaticMode = TRUE THEN
		SetDO ABB_IO_X1_0_DO4, 1;
    ELSE 
        SetDO ABB_IO_X1_0_DO4, 0;
	ENDIF
ENDPROC

PROC SETAutomaticModeOn()
    IF AutomaticModeOn = TRUE THEN
        SetDO ABB_IO_X1_0_DO5, 1;
    ELSE
        SetDO ABB_IO_X1_0_DO5, 0;
    ENDIF
ENDPROC

PROC SETAutomaticModeOff()
    IF AutomaticModeOff = TRUE THEN
        SetDO ABB_IO_X1_0_DO3, 1;
    ELSE
        SetDO ABB_IO_X1_0_DO3, 0;
    ENDIF
ENDPROC

PROC PUTCylinderOut()
    IF CylinderOut = TRUE THEN
        SetDo ABB_IO_X1_0_DO6, 1;
    ELSE 
        SetDo ABB_IO_X1_0_DO6, 0;
    ENDIF
ENDPROC

PROC RUNBeltForward()
    IF BeltForward = TRUE THEN
        SetDo ABB_IO_X1_0_DO1, 1;
    ELSE 
        SetDo ABB_IO_X1_0_DO1, 0;
    ENDIF
ENDPROC

PROC RUNBeltbackward()
    IF BeltBackward = TRUE THEN
        SetDo ABB_IO_X1_0_DO7, 1;
    ELSE 
        SetDo ABB_IO_X1_0_DO7, 0;
    ENDIF
ENDPROC

PROC main()
    RUNBeltbackward;
	PUTCylinderOut;
    RUNBeltForward;
    SETAutomaticMode;
    SETAutomaticModeOn;
    SETAutomaticModeOff;
 ENDPROc

ENDMODULE
